# Name of our workflow which will act as an identifier when have multilple workflows.
name: Firebase Hosting Continuous Deployment

# Define trigger point, on push on master branch, this workflow will be triggered.
on:
  push:
    branches: [ dev ]

# The job(s) you want to do when the workflow is triggered
# We will be using an ubuntu-latest virtual machine to perform these processes
jobs:
  build:
    runs-on: ubuntu-latest

    # Job consists of instructions that you want to trigger
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checkout our code
      - uses: actions/checkout@v1

      # Switching to Flutter dev branch
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'

      # Enabling Flutter Web
      - run: flutter config --enable-web
        
      - run: flutter channel beta

      - run: flutter upgrade
      
      # Get the latst dependencies
      - run: flutter pub get
      
      - run: flutter clean
      # Build our 
      - run: flutter build web --release
      
      # Copy the contents of build/web to the public folder of Firebase
      - run: cp -R build/web/* firebaseHosting/public/
      
      # Using Firebase Actions to deploy to our Firebase Hosting
      - uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
          entryPoint: "./firebaseHosting"  
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_KEY }}
          
          # This is where our stored secret will come in use
